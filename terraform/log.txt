An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place

Terraform will perform the following actions:

  # module.melbeied.aws_alb_listener.listner_https will be created
  + resource "aws_alb_listener" "listner_https" {
      + arn               = (known after apply)
      + certificate_arn   = "arn:aws:acm:us-east-1:599271616820:certificate/d6869786-7e47-40a2-b471-4fcd275142e8"
      + id                = (known after apply)
      + load_balancer_arn = "arn:aws:elasticloadbalancing:us-east-1:599271616820:loadbalancer/app/mainALB/f8252935bd3adb28"
      + port              = 443
      + protocol          = "HTTPS"
      + ssl_policy        = (known after apply)

      + default_action {
          + order            = (known after apply)
          + target_group_arn = "arn:aws:elasticloadbalancing:us-east-1:599271616820:targetgroup/alb-target-group/902cc0a465b0ba6b"
          + type             = "forward"
        }
    }

  # module.melbeied.aws_cloudfront_distribution.site_cdn will be updated in-place
  ~ resource "aws_cloudfront_distribution" "site_cdn" {
        active_trusted_signers         = {
            "enabled" = "false"
            "items.#" = "0"
        }
        aliases                        = [
            "melbeied.net",
        ]
        arn                            = "arn:aws:cloudfront::599271616820:distribution/E3QTBTDOWZQE5J"
        caller_reference               = "terraform-20200616115139555400000003"
        default_root_object            = "index.html"
        domain_name                    = "dlaynxvte9ee3.cloudfront.net"
        enabled                        = true
        etag                           = "E1EMUGA7749405"
        hosted_zone_id                 = "Z2FDTNDATAQYW2"
        http_version                   = "http1.1"
        id                             = "E3QTBTDOWZQE5J"
        in_progress_validation_batches = 0
        is_ipv6_enabled                = false
        last_modified_time             = "2020-06-16 11:51:40.878 +0000 UTC"
        price_class                    = "PriceClass_200"
        retain_on_delete               = false
        status                         = "Deployed"
        tags                           = {}
        wait_for_deployment            = true

        default_cache_behavior {
            allowed_methods        = [
                "GET",
                "HEAD",
            ]
            cached_methods         = [
                "GET",
                "HEAD",
            ]
            compress               = true
            default_ttl            = 300
            max_ttl                = 1200
            min_ttl                = 0
            smooth_streaming       = false
            target_origin_id       = "origin-bucket-www.melbeied.net"
            trusted_signers        = []
            viewer_protocol_policy = "redirect-to-https"

            forwarded_values {
                headers                 = []
                query_string            = false
                query_string_cache_keys = []

                cookies {
                    forward           = "none"
                    whitelisted_names = []
                }
            }
        }

        origin {
            domain_name = "www.melbeied.net.s3.us-east-1.amazonaws.com"
            origin_id   = "origin-bucket-www.melbeied.net"

            s3_origin_config {
                origin_access_identity = "origin-access-identity/cloudfront/EZ32XKRU2S5KE"
            }
        }

        restrictions {
            geo_restriction {
                locations        = []
                restriction_type = "none"
            }
        }

      ~ viewer_certificate {
            acm_certificate_arn            = "arn:aws:acm:us-east-1:599271616820:certificate/d6869786-7e47-40a2-b471-4fcd275142e8"
          ~ cloudfront_default_certificate = false -> true
            minimum_protocol_version       = "TLSv1"
            ssl_support_method             = "sni-only"
        }
    }

  # module.melbeied.aws_lb_listener_certificate.ssl_cert will be created
  + resource "aws_lb_listener_certificate" "ssl_cert" {
      + certificate_arn = "arn:aws:acm:us-east-1:599271616820:certificate/d6869786-7e47-40a2-b471-4fcd275142e8"
      + id              = (known after apply)
      + listener_arn    = (known after apply)
    }